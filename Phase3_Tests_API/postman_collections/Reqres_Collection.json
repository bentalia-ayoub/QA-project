{
  "info": {
    "_postman_id": "reqres-collection-001",
    "name": "Reqres_API_Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Liste des utilisateurs",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users?page=2",
          "host": ["{{baseUrl}}"],
          "path": ["users"],
          "query": [{ "key": "page", "value": "2" }]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has data array', function () {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.data).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Utilisateur unique",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/2",
          "host": ["{{baseUrl}}"],
          "path": ["users", "2"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has user with id 2', function () {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.data.id).to.eql(2);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Créer un utilisateur",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Ayoub\",\n    \"job\": \"QA Engineer\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "  pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response contains name and job', function () {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.name).to.eql('Ayoub');",
              "  pm.expect(jsonData.job).to.eql('QA Engineer');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Modifier un utilisateur",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Ayoub\",\n    \"job\": \"Automation Tester\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/users/2", "host": ["{{baseUrl}}"], "path": ["users", "2"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response contains updatedAt', function () {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.updatedAt).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Supprimer un utilisateur",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": { "raw": "{{baseUrl}}/users/2", "host": ["{{baseUrl}}"], "path": ["users", "2"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 204', function () {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login (réussi)",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/login", "host": ["{{baseUrl}}"], "path": ["login"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response contains token', function () {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.token).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login (échoué)",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"peter@klaven\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/login", "host": ["{{baseUrl}}"], "path": ["login"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "  pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test('Response contains error message', function () {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.error).to.eql('Missing password');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
